def test_process_doc_conversion_unsupported_filetype(load_module):
    logger = MagicMock()
    config_mock = {"processing": {"log_dir": "/tmp"}}

    # Fix: Include required metadata keys like 'output_dir'
    urls_mock = {
        "doc1.xyz": {
            "status": "Pending",
            "output_dir": "/tmp/output/internal/en",
            "language": "en"
        }
    }

    os_walk_return = [("/tmp/output/internal/en", [], ["doc1.xyz"])]

    with patch.object(load_module.WGPT.Utilities, "read_config", return_value=config_mock), \
         patch.object(load_module, "retrieve_url_list", return_value=urls_mock), \
         patch.object(load_module, "os") as mock_os:

        mock_os.walk.return_value = os_walk_return
        mock_os.path.exists.return_value = True
        mock_os.remove = MagicMock()
        mock_os.makedirs = MagicMock()
        mock_os.path.splitext = os.path.splitext

        result = load_module.process_doc_conversion("en", "internal", logger)

        assert result == {"doc1.xyz": {"status": "Unsupported File Format"}}
