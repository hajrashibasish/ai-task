@patch('WGPT.metadata_processing.requests.get')
def test_save_metadata_manual_en(mock_get, load_module):
    # Mock the JSON response for retrieve_page_metadata
    mock_get.return_value = mock_requests_get([
        {"key": "Doc ID:", "value": "12345"},
        {"key": "Content Category:", "value": "Category1"},
        {"key": "Content Owner:", "value": "Owner1"},
        {"key": "Last Edited By:", "value": "Editor1"},
        {"key": "Last Updated:", "value": "Jan 01, 2023"},
        {"key": "Expiration Date:", "value": "Dec 31, 2023"},
        {"key": "Search Description:", "value": "Test Title"}
    ])

    # Mock DB to prevent real DB calls
    mock_db = MagicMock()

    file_info = {"feed_source": "manual"}

    # Call method under test
    load_module.save_metadata(url="url", language="en", doc_id="id", title="title",
                              file_info=file_info, db=mock_db, etl_schema=None)

    # Assert save_metadata_en was called indirectly by checking DB call
    mock_db.execute_update.assert_called_once()
